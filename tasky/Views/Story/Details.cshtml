@model tasky.ViewModels.StoryViewModel

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<fieldset>
    <legend>Story</legend>

    <div class="display-label">
        User Story -
    </div>

    <div class="display-label">
         @Html.DisplayNameFor(model => model.title)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.title)
    </div>

    <span>
        @Html.ActionLink("Edit", "Edit", new { id=Model.id }) |
         @Html.ActionLink("Delete", "Delete", new { id=Model.id })
    </span>
    <div class="display-label">
         @Html.DisplayNameFor(model => model.points)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.points)
    </div>

    <div class="display-label">
         @Html.DisplayNameFor(model => model.status)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.status)
    </div>

    <div class="display-label">
         @Html.DisplayNameFor(model => model.description)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.description)
    </div>

    <div class="display-label">
        @Html.DisplayNameFor(model => model.sprintViewModel.title)
    </div>
    <div class="display-field">
        @Html.ActionLink((string)Model.sprintViewModel.title, "Details", "Sprint", new {id = Model.sprintViewModel.id}, null)
    </div>    

    <div class="taskList">

        <!-- List out tasks using Backbone here -->
    </div>

</fieldset>

@section Scripts {
    <script type="text/javascript">
        var taskdata = @Html.Raw(Json.Encode(Model.tasks))
        /*
            [
            {title: "hi"},
            {title: "hi2"},
            {title: "hi3"}
        ];
        */

        var c = new TaskList(taskdata);
        console.log(c);

        $(document).on("ready", function() {
            var taskView = new TaskListView({ items: c, el:$(".taskList") })
            taskView.render();

            $(".task-check").click(function() {

                var task = $(this).parent();
                task.toggleClass('checked');
            });
        });
    </script>
}