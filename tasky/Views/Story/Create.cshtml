@model tasky.Models.Story

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Story</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.title)
            @Html.ValidationMessageFor(model => model.title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.description)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.description)
            @Html.ValidationMessageFor(model => model.description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.points)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.points)
            @Html.ValidationMessageFor(model => model.points)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.status)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.status, 
                      ViewBag.StatusOptions as SelectList, 
                      "-- Select a status--",
                      new { @class = "editor-textbox" })
            @Html.ValidationMessageFor(model => model.status)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.sprint)
        </div>
        <div class="editor-field">
            @if (ViewBag.SprintTitle != null)
            {
                @ViewBag.SprintTitle
            }
            else 
            {
                @Html.DropDownListFor(model => model.sprint, ViewBag.SprintOptions as SelectList, "-- Filter Sprint --")
            }                               
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
