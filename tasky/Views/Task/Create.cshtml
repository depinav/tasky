@model tasky.Models.Task

@{
    ViewBag.Title = "Create Task";
}

<h2>Create Task</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Task</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Estimate_Hours)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Estimate_Hours)
            @Html.ValidationMessageFor(model => model.Estimate_Hours)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Remaining_Hours)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Remaining_Hours)
            @Html.ValidationMessageFor(model => model.Remaining_Hours)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Status)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Status, 
                      ViewBag.StatusOptions as SelectList, 
                      "-- Select a status--",
                      new { @class = "editor-textbox" })
            @Html.ValidationMessageFor(model => model.Status)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TeamMember)
        </div>
        <div class="editor-field">
            @if (ViewBag.currentTeamMemberID != null)
            {
                @Html.HiddenFor(model => model.TeamMemberId, new { value = ViewBag.currentTeamMemberID })
                @ViewBag.TeamMemberName
            }
            else 
            {
                @Html.DropDownListFor(model => model.TeamMemberId, ViewBag.TeamMemberOptions as SelectList, "-- Assign Team Member --")
            }                               
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.story)
        </div>
        <div class="editor-field">
            @if (ViewBag.currentStoryID != null)
            {
                @Html.HiddenFor(model => model.storyId, new { value = ViewBag.currentStoryID })
                @ViewBag.currentStoryTitle
            }
            else 
            {
                @Html.DropDownListFor(model => model.storyId, ViewBag.StoryOptions as SelectList, "-- Filter Story --")
            }                               
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}